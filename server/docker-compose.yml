services:
  db:
    container_name: db
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: diabetes
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  app:
    container_name: app
    image: node:20
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    command: npm install && npm run dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://user:password@db:5432/diabetes
    ports:
      - '3000:3000'
    depends_on:
      - db

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PG_SERVER_NAME: ${PG_SERVER_NAME}
      PG_SERVER_HOST: ${PG_SERVER_HOST}
      PG_SERVER_PORT: ${PG_SERVER_PORT}
      PG_SERVER_USER: ${PG_SERVER_USER}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    #  - ./docker/entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh:ro
    ports:
      - '8080:80'
    depends_on:
      - db

  nginx:
    container_name: nginx
    image: nginx:alpine
    volumes:
      - ./public:/usr/share/nginx/html:ro
    ports:
      - '80:80'
    depends_on:
      - app

volumes:
  db_data:
  pgadmin_data:
